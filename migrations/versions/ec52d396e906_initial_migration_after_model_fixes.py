"""Initial migration after model fixes

Revision ID: ec52d396e906
Revises: 
Create Date: 2025-06-27 15:55:12.010737

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ec52d396e906'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('food_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('color', sa.String(length=7), nullable=True),
    sa.Column('icon', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('pn_l',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('starting_balance', sa.Float(), nullable=False),
    sa.Column('current_balance', sa.Float(), nullable=False),
    sa.Column('profit_loss', sa.Float(), nullable=False),
    sa.Column('risk_1_percent', sa.Float(), nullable=False),
    sa.Column('risk_5_percent', sa.Float(), nullable=False),
    sa.Column('risk_10_percent', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('target_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('arr', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trade',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('asset', sa.String(length=50), nullable=False),
    sa.Column('trade_type', sa.String(length=20), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('total_cost', sa.Float(), nullable=False),
    sa.Column('fees', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('google_id', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=True),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('username', sa.String(length=80), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('birthdate', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('google_id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('weekly_review',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=False),
    sa.Column('week', sa.Integer(), nullable=False),
    sa.Column('what_worked', sa.Text(), nullable=False),
    sa.Column('what_didnt', sa.Text(), nullable=False),
    sa.Column('trade_type', sa.String(length=50), nullable=True),
    sa.Column('market_timing', sa.Text(), nullable=True),
    sa.Column('entry_too_soon', sa.Text(), nullable=True),
    sa.Column('entry_too_late', sa.Text(), nullable=True),
    sa.Column('profit_too_late', sa.Text(), nullable=True),
    sa.Column('stops_too_tight', sa.Text(), nullable=True),
    sa.Column('risk_reward', sa.Text(), nullable=True),
    sa.Column('risk_too_little', sa.Text(), nullable=True),
    sa.Column('deviated_from_plan', sa.Text(), nullable=True),
    sa.Column('recurring_problems', sa.Text(), nullable=True),
    sa.Column('recurring_positives', sa.Text(), nullable=True),
    sa.Column('tasks', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('work',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opportunity_name', sa.String(length=100), nullable=False),
    sa.Column('next_steps', sa.Text(), nullable=False),
    sa.Column('action_items', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('arr', sa.Float(), nullable=True),
    sa.Column('cbc', sa.Date(), nullable=True),
    sa.Column('next_step_date', sa.Date(), nullable=True),
    sa.Column('risks', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('work_column',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('activity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('activity_type', sa.String(length=100), nullable=False),
    sa.Column('duration', sa.Float(), nullable=False),
    sa.Column('intensity', sa.String(length=20), nullable=False),
    sa.Column('calories_burned', sa.Integer(), nullable=True),
    sa.Column('miles', sa.Float(), nullable=True),
    sa.Column('activity_level', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('distance_milestone',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('trail_name', sa.String(length=100), nullable=False),
    sa.Column('trail_distance', sa.Float(), nullable=False),
    sa.Column('completed_distance', sa.Float(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('equipment', sa.String(length=100), nullable=True),
    sa.Column('muscle_groups', sa.String(length=200), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['exercise_category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('fasting_period',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('duration_minutes', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_entry',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('food_name', sa.String(length=100), nullable=False),
    sa.Column('calories', sa.Integer(), nullable=False),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('fat', sa.Float(), nullable=True),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('food_reference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('food_name', sa.String(length=100), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('calories', sa.Float(), nullable=False),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('fat', sa.Float(), nullable=True),
    sa.Column('fiber', sa.Float(), nullable=True),
    sa.Column('sugar', sa.Float(), nullable=True),
    sa.Column('sodium', sa.Float(), nullable=True),
    sa.Column('saturated_fat', sa.Float(), nullable=True),
    sa.Column('trans_fat', sa.Float(), nullable=True),
    sa.Column('cholesterol', sa.Float(), nullable=True),
    sa.Column('potassium', sa.Float(), nullable=True),
    sa.Column('vitamin_c', sa.Float(), nullable=True),
    sa.Column('calcium', sa.Float(), nullable=True),
    sa.Column('iron', sa.Float(), nullable=True),
    sa.Column('brand', sa.String(length=100), nullable=True),
    sa.Column('serving_size', sa.String(length=50), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('search_keywords', sa.Text(), nullable=True),
    sa.Column('barcode', sa.String(length=32), nullable=True),
    sa.Column('common_units', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['food_category.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('barcode'),
    sa.UniqueConstraint('food_name')
    )
    op.create_table('food_summary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('calories', sa.Float(), nullable=True),
    sa.Column('protein', sa.Float(), nullable=True),
    sa.Column('carbs', sa.Float(), nullable=True),
    sa.Column('fat', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='uix_food_summary_user_date')
    )
    op.create_table('mood',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('progress_pic',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('upload_date', sa.Date(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('stat',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('sex', sa.String(length=10), nullable=True),
    sa.Column('body_fat_percentage', sa.Float(), nullable=True),
    sa.Column('resting_heart_rate', sa.Integer(), nullable=True),
    sa.Column('bicep_measurement', sa.Float(), nullable=True),
    sa.Column('chest_measurement', sa.Float(), nullable=True),
    sa.Column('waist_measurement', sa.Float(), nullable=True),
    sa.Column('butt_measurement', sa.Float(), nullable=True),
    sa.Column('quad_measurement', sa.Float(), nullable=True),
    sa.Column('smm', sa.Float(), nullable=True),
    sa.Column('body_fat_mass', sa.Float(), nullable=True),
    sa.Column('lean_body_mass', sa.Float(), nullable=True),
    sa.Column('bmr', sa.Integer(), nullable=True),
    sa.Column('left_arm_lean_mass', sa.Float(), nullable=True),
    sa.Column('right_arm_lean_mass', sa.Float(), nullable=True),
    sa.Column('left_leg_lean_mass', sa.Float(), nullable=True),
    sa.Column('right_leg_lean_mass', sa.Float(), nullable=True),
    sa.Column('trunk_lean_mass', sa.Float(), nullable=True),
    sa.Column('bodyscan_image_path', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tdee',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('bmr', sa.Integer(), nullable=True),
    sa.Column('activity_calories', sa.Integer(), nullable=True),
    sa.Column('tdee', sa.Integer(), nullable=True),
    sa.Column('calorie_intake', sa.Integer(), nullable=True),
    sa.Column('activity_level', sa.String(length=20), nullable=True),
    sa.Column('activity_multiplier', sa.Float(), nullable=True),
    sa.Column('base_tdee', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', name='uix_tdee_user_date')
    )
    op.create_table('user_exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('equipment', sa.String(length=100), nullable=True),
    sa.Column('muscle_groups', sa.String(length=200), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['exercise_category.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uix_user_exercise_user_name')
    )
    op.create_table('user_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('theme', sa.String(length=20), nullable=True),
    sa.Column('units', sa.String(length=10), nullable=True),
    sa.Column('date_format', sa.String(length=20), nullable=True),
    sa.Column('activity_level', sa.String(length=20), nullable=True),
    sa.Column('goal', sa.String(length=20), nullable=True),
    sa.Column('weekly_goal', sa.Float(), nullable=True),
    sa.Column('calorie_deficit', sa.Integer(), nullable=True),
    sa.Column('email_notifications', sa.Boolean(), nullable=True),
    sa.Column('reminder_frequency', sa.String(length=20), nullable=True),
    sa.Column('reminder_time', sa.String(length=10), nullable=True),
    sa.Column('profile_visibility', sa.String(length=20), nullable=True),
    sa.Column('share_progress', sa.Boolean(), nullable=True),
    sa.Column('auto_backup', sa.Boolean(), nullable=True),
    sa.Column('data_retention_days', sa.Integer(), nullable=True),
    sa.Column('dashboard_sections', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('exercise', sa.String(length=100), nullable=False),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('reps', sa.Integer(), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workout_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'name', name='uix_workout_template_user_name')
    )
    op.create_table('food_serving_size',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('unit', sa.String(length=20), nullable=False),
    sa.Column('grams_equivalent', sa.Float(), nullable=False),
    sa.Column('is_common', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['food_reference.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('food_id', 'description', name='uix_food_serving_size')
    )
    op.create_table('personal_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exercise', sa.String(length=100), nullable=False),
    sa.Column('pr_type', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('reps', sa.Integer(), nullable=True),
    sa.Column('sets', sa.Integer(), nullable=True),
    sa.Column('date_achieved', sa.Date(), nullable=False),
    sa.Column('workout_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['workout_id'], ['workout.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'exercise', 'pr_type', name='uix_personal_record_user_exercise_type')
    )
    op.create_table('user_favorite_exercise',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'exercise_id')
    )
    op.create_table('user_favorite_food',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('food_id', sa.Integer(), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['food_id'], ['food_reference.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'food_id')
    )
    op.create_table('workout_session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=True),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['template_id'], ['workout_template.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'date', 'name', name='uix_workout_session_user_date_name')
    )
    op.create_table('workout_template_exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('template_id', sa.Integer(), nullable=False),
    sa.Column('exercise_name', sa.String(length=100), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('target_sets', sa.Integer(), nullable=True),
    sa.Column('target_reps', sa.Integer(), nullable=True),
    sa.Column('target_weight', sa.Float(), nullable=True),
    sa.Column('rest_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['template_id'], ['workout_template.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('template_id', 'order', name='uix_template_exercise_order')
    )
    op.create_table('workout_session_exercise',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('exercise_name', sa.String(length=100), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=True),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('target_sets', sa.Integer(), nullable=True),
    sa.Column('target_reps', sa.Integer(), nullable=True),
    sa.Column('target_weight', sa.Float(), nullable=True),
    sa.Column('rest_time', sa.Integer(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['workout_session.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('session_id', 'order', name='uix_session_exercise_order')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout_session_exercise')
    op.drop_table('workout_template_exercise')
    op.drop_table('workout_session')
    op.drop_table('user_favorite_food')
    op.drop_table('user_favorite_exercise')
    op.drop_table('personal_record')
    op.drop_table('food_serving_size')
    op.drop_table('workout_template')
    op.drop_table('workout')
    op.drop_table('user_settings')
    op.drop_table('user_exercise')
    op.drop_table('tdee')
    op.drop_table('stat')
    op.drop_table('progress_pic')
    op.drop_table('mood')
    op.drop_table('food_summary')
    op.drop_table('food_reference')
    op.drop_table('food_entry')
    op.drop_table('fasting_period')
    op.drop_table('exercise')
    op.drop_table('distance_milestone')
    op.drop_table('activity')
    op.drop_table('work_column')
    op.drop_table('work')
    op.drop_table('weekly_review')
    op.drop_table('user')
    op.drop_table('trade')
    op.drop_table('target_account')
    op.drop_table('pn_l')
    op.drop_table('food_category')
    op.drop_table('exercise_category')
    # ### end Alembic commands ###
